rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Groups collection
    match /groups/{groupId} {
      allow read: if request.auth != null && exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid));
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           (resource.data.createdBy == request.auth.uid ||
                           exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid)));
    }
    
    // Expenses collection
    match /expenses/{expenseId} {
      allow read: if request.auth != null && 
                 (resource.data.userId == request.auth.uid || 
                 exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid)));
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           (resource.data.createdBy == request.auth.uid);
    }
    
    // Shopping Lists collection
    match /shoppingLists/{listId} {
      allow read: if request.auth != null && 
                 exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid));
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid));
      allow delete: if request.auth != null && 
                   (resource.data.createdBy == request.auth.uid);
    }
    
    // Goals collection
    match /goals/{goalId} {
      allow read: if request.auth != null && 
                 exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid));
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid));
      allow delete: if request.auth != null && 
                   (resource.data.createdBy == request.auth.uid);
    }
    
    // Other collections
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
} 